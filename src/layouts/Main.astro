---
import Breadcrumbs from "@components/Breadcrumbs.astro";

interface StringTitleProp {
  pageTitle: string;
  pageDesc?: string;
}

interface ArrayTitleProp {
  pageTitle: [string, string];
  titleTransition: string;
  pageDesc?: string;
}

export type Props = StringTitleProp | ArrayTitleProp;

const { props } = Astro;
---

<Breadcrumbs />
<main id="main-content">
  {
    "titleTransition" in props ? (
      <h1>
        {props.pageTitle[0]}
        <span transition:name={props.titleTransition}>
          {props.pageTitle[1]}
        </span>
      </h1>
    ) : (
      <h1>{props.pageTitle}</h1>
    )
  }
  <p>{props.pageDesc}</p>
  <slot />

  <script>
    // Source: https://github.com/JuanM04/portfolio/blob/983b0ed0eabdac37bf8b7912d3e8128a443192b9/src/pages/docs/%5B...documentSlug%5D.astro#L74-L103
    // From this comment: https://github.com/withastro/astro/issues/4433#issuecomment-1584019991
    /**
     * @params {HTMLCollectionOf<HTMLElement>} graphs
     */
    async function renderDiagrams(graphs) {
      const { default: mermaid } = await import("mermaid");
      mermaid.initialize({
        startOnLoad: false,
        fontFamily: "var(--sans-font)",
        // @ts-ignore This works, but TS expects a enum for some reason
        theme: window.matchMedia("(prefers-color-scheme: dark)").matches
          ? "dark"
          : "default",
      });

      for (const graph of graphs) {
        const content = graph.querySelector(".mermaid-src").innerText;
        if (!content) continue;
        let svg = document.createElement("svg");
        const id = (svg.id = "mermaid-" + Math.round(Math.random() * 100000));
        graph.appendChild(svg);
        mermaid.render(id, content).then(result => {
          graph.innerHTML = result.svg;
        });
      }
    }

    const graphs = document.getElementsByClassName("mermaid");
    if (document.getElementsByClassName("mermaid").length > 0) {
      renderDiagrams(graphs);
    }
  </script>
</main>

<style>
  #main-content {
    @apply mx-auto w-full max-w-4xl px-4 pb-4;
  }
  #main-content h1 {
    @apply text-2xl font-semibold sm:text-3xl;
  }
  #main-content p {
    @apply mb-6 mt-2 italic;
  }
</style>
